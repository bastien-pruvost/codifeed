[project]
name = "codifeed-api"
version = "0.1.0"
description = "Codifeed API"
authors = [{ name = "Bastien Pruvost", email = "bastien.mory@gmail.com" }]
requires-python = ">=3.13,<3.14"
dependencies = [
    "alembic (>=1.16.4,<2.0.0)",
    "argon2-cffi (>=25.1.0,<26.0.0)",
    "flask-cors (>=6.0.1,<7.0.0)",
    "flask-jwt-extended (>=4.7.1,<5.0.0)",
    "flask-openapi3[swagger] (>=4.2.1,<5.0.0)",
    "psycopg2-binary (>=2.9.10,<3.0.0)",
    "pyright (>=1.1.403,<2.0.0)",
    "python-dotenv (>=1.1.1,<2.0.0)",
    "ruff (>=0.12.7,<0.13.0)",
    "sqlmodel (>=0.0.24,<0.0.25)",
    "gunicorn (>=23.0.0,<24.0.0)",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.ruff]
line-length = 100
target-version = "py313"
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "venv",
    "migrations/versions",
]

[tool.ruff.lint]
fixable = ["ALL"]
select = ["E", "F", "B", "I", "W"]
isort.known-first-party = ["app"]


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"


[tool.pyright]
# Specify Python version
pythonVersion = "3.13"
# Include source files
include = ["app"]
# Exclude directories
exclude = ["**/__pycache__", "**/.mypy_cache", "**/.venv"]
# Type checking mode
typeCheckingMode = "basic"
# Report missing imports
reportMissingImports = true
# Report missing type stubs
reportMissingTypeStubs = false
